{"Id":84,"Title":"rust入门教程（0.12）-7-字符串与向量","Slug":"2014-11-10-2","Text":"# 字符串与向量\n\n### 字符串\n字符串分为String 和 \u0026str类型 \u0026str是String类型的slice，少说 看例子\n\n    let string = \"Hello there.\"; // 记住  这个是\u0026str类型\n\n    let mut s = \"Hello\".to_string(); // String类型\n    println!(\"{}\", s);\n    \n    s.push_str(\", world.\"); // String类型的方法\n    println!(\"{}\", s);\n\n类型转换 String-》\u0026str\n\n    fn takes_slice(slice: \u0026str) {\n        println!(\"Got: {}\", slice);\n    }\n    \n    fn main() {\n        let s = \"Hello\".to_string();\n        takes_slice(s.as_slice());\n    }\n\n类型转换与判断\n\n    fn compare(string: String) {\n        if string.as_slice() == \"Hello\" {\n            println!(\"yes\");\n        }\n    }\n    \n    // over to_string():\n    \n    fn compare(string: String) {\n        if string == \"Hello\".to_string() {\n            println!(\"yes\");\n        }\n    }\n    \n    fn main() {\n        compare_slice(\"Hello\".to_string());\n        compare_string(\"Hello\".to_string());\n    }\n    // 不同类型不允许==判断\n\n### Vertors（向量）\n\nVec\u003cT\u003e (a 'vector'), [T, .. N] (an 'array'), and \u0026[T] (a 'slice'). Whew!\n\n##### let一个vertors\n    let nums = vec![1i, 2i, 3i];\n    let nums = [1i, 2i, 3i];\n    let nums = [1i, ..20]; // Shorthand for an array of 20 elements all initialized to 1\n\n##### 向量操作\n\n    let mut nums = vec![1i, 2i, 3i];\n    nums.push(4i); // works\n    \n    let mut nums = [1i, 2i, 3i];\n    nums.push(4i); //  error: type `[int, .. 3]` does not implement any method\n                   // in scope named `push`\n\n##### 向量切片转换\n\n    let vec = vec![1i, 2i, 3i];\n    let slice = vec.as_slice();\n\n##### 下标操作\n\n    let names = [\"Graydon\", \"Brian\", \"Niko\"];\n    println!(\"The second name is: {}\", names[1]); // Brian","Tags":["rust"],"CreateTime":1415611602,"EditTime":1415611602,"UpdateTime":1415611602,"IsComment":true,"IsLinked":false,"AuthorId":10,"Template":"blog.html","Type":"article","Status":"publish","Format":"markdown","Comments":[],"Hits":365}