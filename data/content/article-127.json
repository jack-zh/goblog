{"Id":127,"Title":"Linux-tips","Slug":"2014-11-18-0","Text":"  整理自[左耳朵耗子](http://weibo.com/haoel)\n  \n## 屏幕录制\n---\n如果你想把我的屏幕操作的过程录下来，在Linux下只需要一个ffcast的命令就可以搞定了。\n\n    $ ffcast -s ffmpeg -r 20 -vcodec huffyuv out.avi\n\n上面的命令会让你选择一个要录制的区域，然后呢，就会你就可以操作了，操作完后退回去按 q 键退出结束。如果你想制作成 gif 文件，你可以用 convert命令：\n\n    $ convert -layers Optimize -set delay 1 out.avi out.gif\n    \n上面会有如下效果：\n\n![](/static/upload/2014111801555910.gif)\n\n![](/static/upload/201411180156045.gif )\n\n##### 安装\n\n    // 安装 ffcast\n    \n    $ sudo add-apt-repository ppa:minos-archive/main\n    $ sudo apt-get update\n    $ sudo apt-get install ffcast\n    \n    // 安装 ffmpeg\n    $ sudo apt-add-repository ppa:mc3man/trusty-media\n    $ sudo apt-get update\n    $ sudo apt-get install ffmpeg gstreamer0.10-ffmpeg\n    \n    // 安装convert\n    $ sudo apt-get install imagemagick\n\n## 命令行剪切版\n\n如何把命令行的输出copy到剪贴版中？\n\n在Windows下，你可以使用`clip`命令，如：\n\n    tree | clip\n\nLinux下，你可以安装`xclip`，如：\n\n    cat file | xclip\n    \n`xclip` 是拷贝，`xclip -o`是粘贴\n\nmac OS X上，你可以使用`pbcopy/pbpaste`命令，如：\n\n    pbcopy \u003c .ssh/id_rsa.pub\n\ncygwin上是`putclip`和`getclip`。\n\n## INT_MIN坑\n\n32位的int型的取值是2147483647 到 -2147483648，但是，在C/C++语言中，你不能直接使用 -2147483648 来代替最小负数，因为它不是一个数，而是一个表达式。表达式是：“对正数2147483648取负”，所以，2147483648已经溢出了。这就是为什么INT_MIN总是定义成 (-INT_MAX - 1) 的原因.\n\n## shell管道退出码\n\n我们知道，linux命令行上一个命令的退出码放在了`$?`环境变变中，但是，如果这个命令是一串管道符连接和多个命令，怎么知道每个命令的退出码？你可以使用 PIPESTATUS环境变量。比如这个测试：\n   \n   true | false | true; echo \"${PIPESTATUS[@]}\" ","Tags":["linux"],"CreateTime":1416247585,"EditTime":1416247618,"UpdateTime":1416247585,"IsComment":true,"IsLinked":false,"AuthorId":10,"Template":"blog.html","Type":"article","Status":"publish","Format":"markdown","Comments":[],"Hits":41}