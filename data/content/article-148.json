{"Id":148,"Title":"virtualenv的简单使用手册","Slug":"2014-12-11-1","Text":"# virtualenv的简单使用手册\n\n### virtualenv\n`virtualenv`用于创建独立的`Python`环境，多个`Python`相互独立，互不影响，它能够：\n  + 在没有权限的情况下安装新套件\n  + 不同应用可以使用不同的套件版本\n  + 套件升级不影响其他应用\n\n#### 安装\n\u0009# ubuntu\n    sudo apt-get install python-virtualenv\n    # all\n    pip install virtualenv \n\n#### 使用方法\n\n    virtualenv [虚拟环境名称] \n\n如，创建**ENV**的虚拟环境\n\n    virtualenv ENV\n\n默认情况下，虚拟环境会依赖系统环境中的site packages，就是说系统中已经安装好的第三方package也会安装在虚拟环境中，如果不想依赖这些package，那么可以加上参数 `--no-site-packages`建立虚拟环境\n\n    virtualenv --no-site-packages [虚拟环境名称]\n\n#### 启动虚拟环境\n\n    cd ENV\n    source ./bin/activate\n\n注意此时命令行会多一个(`ENV`)，ENV为虚拟环境名称，接下来所有模块都只会安装到该目录中去。\n\n#### 退出虚拟环境\n\n    deactivate \n\n在虚拟环境安装Python套件\nVirtualenv 附带有pip安装工具，因此需要安装的套件可以直接运行：\n\n    pip install [套件名称]\n\n如果没有启动虚拟环境，系统也安装了pip工具，那么套件将被安装在系统环境中，为了避免发生此事，可以在~/.zshrc 或者 ~/.bashrc 文件中加上：\n\n    export PIP_REQUIRE_VIRTUALENV=true\n    \n或者让在执行pip的时候让系统自动开启虚拟环境：\n\n    export PIP_RESPECT_VIRTUALENV=true\n\n### Virtualenvwrapper\nVirtaulenvwrapper是virtualenv的扩展包，用于更方便管理虚拟环境，它可以做：\n  + 将所有虚拟环境整合在一个目录下\n  + 管理（新增，删除，复制）虚拟环境\n  + 切换虚拟环境\n  + ...\n\n#### 安装\n\n    sudo easy_install virtualenvwrapper  \n\n此时还不能使用virtualenvwrapper，默认virtualenvwrapper安装在/usr/local/bin下面，实际上你需要运行virtualenvwrapper.sh。那我们就运行它。\n\n    source /usr/local/bin/virtualenvwrapper.sh\n    \n把这句话加到.bashrc 或者.zshrc中\n\n#### 用法\n\n+ 列出虚拟环境列表\n\n      workon \n    \n+ 也可以使用\n\n      lsvirtualenv \n    \n+ 新建虚拟环境\n\n      mkvirtualenv [虚拟环境名称]\n\n+ 启动/切换虚拟环境\n\n      workon [虚拟环境名称]\n\n+ 删除虚拟环境\n\n      rmvirtualenv [虚拟环境名称]\n\n+ 离开虚拟环境\n\n      deactivate \n","Tags":["python"],"CreateTime":1418284391,"EditTime":1418284493,"UpdateTime":1418284391,"IsComment":true,"IsLinked":false,"AuthorId":10,"Template":"blog.html","Type":"article","Status":"publish","Format":"markdown","Comments":[],"Hits":16}