{"Id":157,"Title":"Golang json 基本处理Example","Slug":"2014-12-24-1","Text":"``` go\npackage main\n\nimport (\n\u0009\"encoding/json\"\n\u0009\"fmt\"\n\u0009\"os\"\n)\n\ntype ConfigStruct struct {\n\u0009Host              string   `json:\"host\"`\n\u0009Port              int      `json:\"port\"`\n\u0009AnalyticsFile     string   `json:\"analytics_file\"`\n\u0009StaticFileVersion int      `json:\"static_file_version\"`\n\u0009StaticDir         string   `json:\"static_dir\"`\n\u0009TemplatesDir      string   `json:\"templates_dir\"`\n\u0009SerTcpSocketHost  string   `json:\"serTcpSocketHost\"`\n\u0009SerTcpSocketPort  int      `json:\"serTcpSocketPort\"`\n\u0009Fruits            []string `json:\"fruits\"`\n}\n\ntype Other struct {\n\u0009SerTcpSocketHost string   `json:\"serTcpSocketHost\"`\n\u0009SerTcpSocketPort int      `json:\"serTcpSocketPort\"`\n\u0009Fruits           []string `json:\"fruits\"`\n}\n\nfunc main() {\n\u0009jsonStr := `\n        {\n            \"host\": \"http://localhost:10086\",\n            \"port\": 10086,\n            \"analytics_file\": \"abc\",\n            \"static_file_version\": 1,\n            \"static_dir\": \"/Users/jack/workspace/gowork/src/goTest/\",\n            \"templates_dir\": \"/Users/jack/workspace/gowork//templates/\",\n            \"serTcpSocketHost\": \":12340\",\n            \"serTcpSocketPort\": 12340,\n            \"fruits\": [\"apple\", \"peach\"]\n        }`\n\n\u0009//json str 转map\n\u0009var dat map[string]interface{}\n\u0009if err := json.Unmarshal([]byte(jsonStr), \u0026dat); err == nil {\n\u0009\u0009fmt.Println(\"==============json str 转map=======================\")\n\u0009\u0009fmt.Println(dat)\n\u0009\u0009fmt.Println(dat[\"host\"])\n\u0009}\n\n\u0009//json str 转struct\n\u0009var config ConfigStruct\n\u0009if err := json.Unmarshal([]byte(jsonStr), \u0026config); err == nil {\n\u0009\u0009fmt.Println(\"================json str 转struct==================\")\n\u0009\u0009fmt.Println(config)\n\u0009\u0009fmt.Println(config.Host)\n\u0009}\n\n\u0009//json str 转struct(部份字段)\n\u0009var part Other\n\u0009if err := json.Unmarshal([]byte(jsonStr), \u0026part); err == nil {\n\u0009\u0009fmt.Println(\"================json str 转struct===================\")\n\u0009\u0009fmt.Println(part)\n\u0009\u0009fmt.Println(part.SerTcpSocketPort)\n\u0009}\n\n\u0009//struct 到json str\n\u0009if b, err := json.Marshal(config); err == nil {\n\u0009\u0009fmt.Println(\"================struct 到json str===================\")\n\u0009\u0009fmt.Println(string(b))\n\u0009}\n\n\u0009//map 到json str\n\u0009fmt.Println(\"================map 到json str============================\")\n\u0009enc := json.NewEncoder(os.Stdout)\n\u0009enc.Encode(dat)\n\n\u0009//array 到 json str\n\u0009arr := []string{\"hello\", \"apple\", \"python\", \"golang\", \"base\", \"peach\", \"pear\"}\n\u0009lang, err := json.Marshal(arr)\n\u0009if err == nil {\n\u0009\u0009fmt.Println(\"================array 到 json str========================\")\n\u0009\u0009fmt.Println(string(lang))\n\u0009}\n\n\u0009//json 到 []string\n\u0009var wo []string\n\u0009if err := json.Unmarshal(lang, \u0026wo); err == nil {\n\u0009\u0009fmt.Println(\"================json 到 []string===========================\")\n\u0009\u0009fmt.Println(wo)\n\u0009}\n}```\n","Tags":["golang"],"CreateTime":1419408004,"EditTime":1419408048,"UpdateTime":1419408004,"IsComment":true,"IsLinked":false,"AuthorId":10,"Template":"blog.html","Type":"article","Status":"publish","Format":"markdown","Comments":[],"Hits":10}