{"Id":23,"Title":"高效程序员的修炼-设计时要把用户放在心上","Slug":"2014-10-24-1","Text":"### 设计时要把用户放在心上\n\n+ 你永远不会有足够的奶酪\n  + 你的应用受不了一点电击\n  + 用户体验是“可选的”\n  + CNN不会担心易用性，用户体验(核心功能的重要性)\n+ 细节决定成败\n  + 注重细节，持续改进\n  + 把最重要的事情做正确\n  + 善于倾听反馈，改进细节\n+ 用户界面代表了软件\n  + 易用 TeX和Ruby\n  + 有好的界面，才有时间在用户接受的时间里面更改背后的Bug？\n+ 用户界面代表了你的软件\n. + 用户界面需要优先设计\n  + 你草拟用户界面的时候，必须置身与技术开发环境之外\n  + 在纸上草拟原型是个不错的选择\n  + 纸上草拟的好处（技术的保鲜期与香蕉无异）（纸上技术保存期很强）\n  + 用户界面有限设计的软件开发模式的最求比选择任何工具都重要\n+ 分页显示该休矣\n  + 在理想情况下，每次搜索都应该只返回一个结果\n  + 无穷显示模式 滚滚滚\n+ 对待弱视用户\n  + 用户必回阅读你放在界面上的任何信息\n  + 用户只会读取少量的，让他们完成任务的文字上\n+ 浏览器底栏\n  + 以前，把信息塞到底栏上面去，因为用户不会滚动界面\n  + 不要把全部塞到底栏以上，只要要你的界面看上去是可以滚动的就好\n  + 小心那些与底栏齐平的生硬的水平线\n  + 避免页面内的滚动条\n  + 把最重要的东西写在上面最先看到的敌方\n+ 菲兹定律与无限宽度\n+ 单元测试的终极失败\n  + 用户是否想要用你的软件，如果这个终极测试失败，其他的测试都是失败的  \n  + 用户说这个是一个Bug，这个就是Bug，不论这个是写在什么上的\n+ 第一版我们做的不好，但我们照样发布\n  + 做砸了还是还可以，用户说的算\n  + 你的团队最用户反馈的响应速度会为你的软件定下基调\n  + 不要迷信完美软件\n  + 即使第一版做的不好，也要坚持把它发布出去\n\n","Tags":["高效程序员的修炼"],"CreateTime":1414151927,"EditTime":1414162335,"UpdateTime":1414151927,"IsComment":true,"IsLinked":false,"AuthorId":10,"Template":"blog.html","Type":"article","Status":"publish","Format":"markdown","Comments":[],"Hits":32}